--- TRIGGERS

SELECT * FROM TBLPERSON;

SELECT * FROM TBLPRODUCT;


ALTER TRIGGER TR_TBLPRODUCT_INSERT
ON TBLPRODUCT 
FOR INSERT
AS 
BEGIN
		DECLARE @ID INT;
		SELECT @ID = ID FROM INSERTED;;
			IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
				   WHERE TABLE_NAME = N'TBLAUDIT')
		BEGIN
			CREATE TABLE TBLAUDIT (ID INT IDENTITY(1,1) PRIMARY KEY, [AUDIT TIME] VARCHAR(255))
		END
			INSERT INTO TBLAUDIT VALUES 
			(CONVERT(VARCHAR(255),
			 'ID OF -- '+CAST( @ID AS VARCHAR(25)) +' AT  '+ CONVERT(VARCHAR(255),SYSDATETIME()  )))
		
	

END;

DECLARE @AB DATETIME2;
SET @AB = SYSDATETIME();
SELECT 'ABC' + CAST(@AB AS VARCHAR(255));

INSERT INTO TBLPRODUCT VALUES ('NOWEL',300),('LANDOCS VENTURES',250),('LANDOCS VENTURES',250),('LANDOCS VENTURES',250);

SELECT * FROM TBLAUDIT;
UPDATE TBLPRODUCT SET PRICE = 240 WHERE NAME ='LANDOCS VENTURES'


--- update contains deleted and inserted table
ALTER TRIGGER AUDITOR 
ON TBLPRODUCT
FOR UPDATE
AS 
BEGIN

SELECT * FROM INSERTED;
SELECT * FROM DELETED;

SELECT * 
INTO #TEMPTABLE
FROM INSERTED;
DECLARE @ID_DEL INT, @ID_INS INT;

DECLARE @NAME_DEL VARCHAR(255) , @NAME_INS VARCHAR(255);
DECLARE @AUDIT_STRING VARCHAR(1000);
SET @AUDIT_STRING = '';
WHILE (EXISTS(SELECT * FROM #TEMPTABLE))
BEGIN
	SELECT @ID_DEL =ID , @NAME_DEL=NAME FROM DELETED;
	SELECT @ID_INS = ID , @NAME_INS=NAME FROM  INSERTED;
	IF(@ID_DEL <> @ID_INS)
		SET @AUDIT_STRING = @AUDIT_STRING + ' CHANGED FROM ' + @ID_DEL + ' TO ' + @ID_INS;
	IF(@NAME_DEL <> @NAME_INS)
		SET @AUDIT_STRING = @AUDIT_STRING  +  ' CHANGED FROM ' + @NAME_DEL + ' TO ' + @NAME_INS;

	INSERT INTO DBO.TBLAUDIT VALUES (@AUDIT_STRING);
	DELETE FROM #TEMPTABLE WHERE NAME = @NAME_INS;
	 
END;
END;

SELECT * FROM TBLPRODUCT;
SELECT * FROM tempdb.sys.tables
SELECT * FROM TBLAUDIT;
UPDATE TBLPRODUCT SET NAME='UPSTART' WHERE NAME ='BOOST';


SELECT GENDERID, AGE,SUM(AGE) FROM TBLPERSON 
GROUP BY
	GROUPING SETS (
		
		(AGE),
		(GENDERID),
		()
	)
ORDER BY GROUPING(AGE),GROUPING(GENDERID),GENDERID;


ALTER PROC spUpdateTblPersons
as 
begin 
BEGIN TRANSACTION 
	BEGIN TRY
		SELECT * FROM TBLPERSON;
		UPDATE TBLPERSON SET NAME = 'BOOST' WHERE NAME = 'Pikachu';
		UPDATE TBLPERSON SET genderid = 2 WHERE NAME = 'Pikachu';
		PRINT 'SUCCESS';
	COMMIT TRANSACTION
	END TRY 
	BEGIN CATCH
		PRINT 'ERROR';
		ROLLBACK TRANSACTION;
	END CATCH;
END;


-- SET TRANSACTION ISOLATION LEVEL READ UNCOMMITED 
SELECT * FROM TBLPERSON;
exec sp_readerrorlog;